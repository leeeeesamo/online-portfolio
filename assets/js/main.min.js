/* @preserve Cookie Consent Init */
function createCookie(name, value, days) {
    let expires = "";
    if (days) {
        const date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = `${name}=${value || ""}${expires}; path=/`;
}

function readCookie(name) {
    const nameEQ = name + "=";
    const cookies = document.cookie.split(";");
    for (let cookie of cookies) {
        cookie = cookie.trim();
        if (cookie.indexOf(nameEQ) === 0) return cookie.substring(nameEQ.length, cookie.length);
    }
    return null;
}

function addCookieConsentListener() {
    const consentButton = document.getElementById("cookie-notice-accept");
    if (consentButton) {
        consentButton.addEventListener("click", () => {
            createCookie(cookieName, "true", 31);
            const notice = document.getElementById("cookie-notice");
            if (notice) notice.style.display = "none";
            location.reload(); // Reload to initialize analytics after consent
        });
    }
}

function googleAnalyticsInit() {
    if (analyticsName && analyticsName.toLowerCase() !== "") {
        function gtag() {
            dataLayer.push(arguments);
        }
        window.dataLayer = window.dataLayer || [];
        gtag("js", new Date());
        gtag("config", analyticsName, { anonymize_ip: true });
        if (analyticsNameGA4) {
            gtag("config", analyticsNameGA4, { anonymize_ip: true });
        }
    }
}

/* Initialize Cookie Consent and Google Analytics */
if (isCookieConsent.toLowerCase() === "true") {
    addCookieConsentListener();
    if (readCookie(cookieName) === "true") {
        googleAnalyticsInit();
    } else {
        const notice = document.getElementById("cookie-notice");
        if (notice) notice.style.display = "block";
    }
} else {
    googleAnalyticsInit();
}

/* @preserve Dark Mode Init */
const themeButton = {
    light: `<i class="fas fa-adjust" aria-hidden="true"></i><span class="navbar-label-with-icon"> ${darkBtn}</span>`,
    dark: `<i class="fas fa-adjust fa-rotate-180" aria-hidden="true"></i><span class="navbar-label-with-icon"> ${lightBtn}</span>`,
};

function currentTheme() {
    return localStorage.getItem("theme");
}

function setMode(mode) {
    document.documentElement.setAttribute("data-theme", mode);
    localStorage.setItem("theme", mode);
    const toggleButton = document.getElementById("theme-toggle");
    if (toggleButton) toggleButton.innerHTML = themeButton[mode];
}

function themeToggle() {
    const newMode = currentTheme() === "light" ? "dark" : "light";
    setMode(newMode);
}

function bootstrapTheme() {
    if (isAutoTheme) {
        if (!currentTheme()) {
            const prefersDark = window.matchMedia("(prefers-color-scheme: dark)");
            if (prefersDark.matches) localStorage.setItem("theme", "dark");
            prefersDark.addEventListener("change", () => {
                if (prefersDark.matches) localStorage.setItem("theme", "dark");
            });
        }
    }
    setMode(currentTheme() || "light");
}

bootstrapTheme();

/* @preserve Masonry Layout Init */
try {
    const gridElement = document.querySelector(".grid");
    if (gridElement) {
        const masonryInstance = new Masonry(gridElement, {
            itemSelector: ".grid-item",
            columnWidth: ".grid-sizer",
            gutter: ".gutter-sizer",
            percentPosition: true,
        });
        const imgLoader = imagesLoaded(gridElement);
        imgLoader.on("progress", () => masonryInstance.layout());
    }
} catch (error) {
    console.error("Masonry initialization error:", error);
}

/* @preserve Navbar */
document.addEventListener("DOMContentLoaded", () => {
    const pullButton = document.getElementById("pull");
    const navList = document.querySelector("nav ul");

    // Toggle navigation menu visibility
    ["click", "touch"].forEach((eventType) => {
        if (pullButton) {
            pullButton.addEventListener(eventType, () => {
                navList?.classList.toggle("hide");
            });
        }
    });

    // Parallax effect on scroll
    window.addEventListener("scroll", () => {
        const yOffset = -(window.scrollY || window.pageYOffset || document.body.scrollTop) / 3;
        const mainElement = document.getElementById("main");
        if (mainElement) {
            mainElement.style.backgroundPosition = `100% ${yOffset - 50}px, 0%, center top`;
        }
    });
});
